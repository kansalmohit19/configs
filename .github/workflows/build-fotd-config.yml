name: build-fotd-config-files

on:
  push:
    branches:
      - "master"
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  push-json:
    runs-on: ubuntu-latest
    steps:
      # Checkout current branch
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      # Configure Git
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      # Switch to release branch (or create it)
      - name: Prepare release branch
        run: |
          # Determine the branch/folder name safely
          CURRENT_BRANCH=""
          FILE_NAME=""
  
          if [ -n "$GITHUB_HEAD_REF" ]; then
          # It's a PR event
          CURRENT_BRANCH="$GITHUB_HEAD_REF"            # source branch of the PR
          PR_NUMBER="${GITHUB_REF#refs/pull/}"      # e.g., 4/merge
          PR_NUMBER="${PR_NUMBER%%/*}"              # extract just PR number
          FILE_NAME="pr-${PR_NUMBER}"
          else
          # Branch push or workflow_dispatch
          CURRENT_BRANCH="${GITHUB_REF##*/}"           # current branch name
          FILE_NAME="$CURRENT_BRANCH"
          fi
  
          # Sanitize FILE_NAME for branches (replace / with - and remove dots)
          if [[ "$FILE_NAME" != pr-* ]]; then
          FILE_NAME="${FILE_NAME//\//-}"             # replace slashes with -
          FILE_NAME="${FILE_NAME//./}"               # remove dots
          fi

          echo "Source branch (CURRENT_BRANCH): $CURRENT_BRANCH"
          echo "Sanitized file name (FILE_NAME): $FILE_NAME"

          # Fetch and checkout release branch
          git fetch origin release || echo "Release branch does not exist"
          git checkout release || git checkout -b release
          
          # Copy files from the source branch (CURRENT_BRANCH)
          git checkout "$CURRENT_BRANCH" -- fotd/app-config.json
          git checkout "$CURRENT_BRANCH" -- fotd/facts-list.json
          git checkout "$CURRENT_BRANCH" -- fotd/login.json

          # Create folders for new version
          echo "Creating folders"
          mkdir -p fotd/app-config
          mkdir -p fotd/facts-list
          mv fotd/app-config.json fotd/app-config/$FILE_NAME.json
          mv fotd/facts-list.json fotd/facts-list/$FILE_NAME.json
          mv fotd/login.json fotd/login/$FILE_NAME.json

          # Check if files exist
          echo "Files in fotd/app-config:"
          ls -l fotd/app-config
          echo "Files in fotd/facts-list:"
          ls -l fotd/facts-list

          # Stage and commit
          echo "Stage and commit"
          git add "fotd/app-config/$FILE_NAME.json"
          git add "fotd/facts-list/$FILE_NAME.json"
          git add "fotd/login/$FILE_NAME.json"
          git commit -m "Add versioned fotd JSON files" || echo "No changes to commit"
          git push origin release

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}